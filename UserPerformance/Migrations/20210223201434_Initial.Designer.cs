// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserPerformanceApp.Infrastructure;

namespace UserPerformance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210223201434_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UserPerformanceApp.Infrastructure.Activity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("WorkCost")
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Root activity for all user activities",
                            Name = "User activities"
                        });
                });

            modelBuilder.Entity("UserPerformanceApp.Infrastructure.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserPerformanceApp.Infrastructure.CalendarDay", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Date");

                    b.ToTable("CalendarDays");
                });

            modelBuilder.Entity("UserPerformanceApp.Infrastructure.UserActivity", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ActivityId")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "ActivityId");

                    b.HasIndex("ActivityId");

                    b.ToTable("UserActivities");
                });

            modelBuilder.Entity("UserPerformanceApp.Infrastructure.UserActivityDate", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ActivityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("Count")
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("UserId", "ActivityId", "Date");

                    b.ToTable("UserActivityDates");
                });

            modelBuilder.Entity("UserPerformanceApp.Infrastructure.UserDateWorkHours", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("WorkHours")
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("UserId", "Date");

                    b.ToTable("UserDateWorkHours");
                });

            modelBuilder.Entity("UserPerformanceApp.Infrastructure.Activity", b =>
                {
                    b.HasOne("UserPerformanceApp.Infrastructure.Activity", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("UserPerformanceApp.Infrastructure.UserActivity", b =>
                {
                    b.HasOne("UserPerformanceApp.Infrastructure.Activity", "Activity")
                        .WithMany("UserActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("UserPerformanceApp.Infrastructure.UserActivityDate", b =>
                {
                    b.HasOne("UserPerformanceApp.Infrastructure.UserActivity", "UserActivity")
                        .WithMany("UserActivityDates")
                        .HasForeignKey("UserId", "ActivityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserActivity");
                });

            modelBuilder.Entity("UserPerformanceApp.Infrastructure.Activity", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("UserActivities");
                });

            modelBuilder.Entity("UserPerformanceApp.Infrastructure.UserActivity", b =>
                {
                    b.Navigation("UserActivityDates");
                });
#pragma warning restore 612, 618
        }
    }
}
